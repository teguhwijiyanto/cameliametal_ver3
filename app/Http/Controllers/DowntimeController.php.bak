<?php

namespace App\Http\Controllers;

use App\Http\Resources\Downtime\DowntimeCollection;
use App\Models\Downtime;
use App\Models\DowntimeRemark;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class DowntimeController extends Controller
{
	
    //
    public function updateDataDowntime(Request $request)
    {
        $downtimeData = Downtime::where('workorder_id',$request->workorder_id)
                            ->where('status','stop')
                            ->orWhere('is_downtime_stopped',false)
                            ->orderBy('is_remark_filled','asc')
                            ->orderby('id','desc')->get();
        return new DowntimeCollection($downtimeData);
    }

/*
	//
    public function updateDataDowntime(Request $request)
    {

        $downtimeData = Downtime::leftjoin('downtime_remarks','downtime_remarks.downtime_id','downtimes.id')
         ->where('workorder_id',$request->workorder_id)
         ->where('downtimes.status','run')
		 ->orWhere('is_downtime_stopped',false)
         ->select(
                  'downtimes.id',
                  'downtimes.workorder_id',
                  'downtimes.downtime_number',
                  'downtimes.time',
			      'downtimes.status',
			      'downtimes.downtime',
			      'downtimes.is_downtime_stopped',
			      'downtimes.is_remark_filled',
			      'downtimes.created_at',
			      'downtimes.updated_at',
			      'downtime_remarks.is_waste_downtime',
			      'downtime_remarks.downtime_reason',
			      'downtime_remarks.remarks'
          )
	      ->orderBy('is_remark_filled','asc')
          ->orderby('id','desc')
         ->get();


        return new DowntimeCollection($downtimeData);
*/

}
